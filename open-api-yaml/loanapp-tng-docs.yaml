openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8004
  description: Generated server url
paths:
  /v2/paydays/{loanId}:
    get:
      tags:
      - mifos-payday-loan-controller
      operationId: findLoanMifos
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
          enum:
          - PaydayLoan-TNG PDL_TNG
          - PaydayLoan-HMG PDL_HMG
          - PDL_VAC_OFFICE PDL_VAC_OFFICE
          - PDL_VAC_FACTORY PDL_VAC_FACTORY
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseLoanDetailDto'
    put:
      tags:
      - mifos-payday-loan-controller
      operationId: updateInfoMifos
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoanRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
  /v2/paydays/updateAmount/{loanId}:
    put:
      tags:
      - mifos-payday-loan-controller
      operationId: updateAmountMifos
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoanAmountRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseLoanDetailDto'
  /v1/promotions/vouchers/{voucherId}:
    put:
      tags:
      - promotion-controller
      operationId: updateVoucher
      parameters:
      - name: voucherId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoucherRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoucher'
  /v1/promotions/events/{promotionEventId}:
    put:
      tags:
      - promotion-controller
      operationId: updatePromotionEvent
      parameters:
      - name: promotionEventId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePromotionEventRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePromotionEvent'
  /v1/paydays/{loanId}:
    get:
      tags:
      - payday-loan-controller
      operationId: findLoan
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
    put:
      tags:
      - payday-loan-controller
      operationId: updateInfo
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoanRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
  /v1/paydays/updateAmount/{loanId}:
    put:
      tags:
      - payday-loan-controller
      operationId: updateAmount
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoanAmountRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
  /v2/paydays:
    get:
      tags:
      - mifos-payday-loan-controller
      operationId: getLoanMifos
      parameters:
      - name: status
        in: query
        required: false
        schema:
          type: string
          enum:
          - PENDING
          - UNDOAPPROVAL
          - APPROVE
          - AWAITING_DISBURSEMENT
          - REJECT
          - DISBURSE
          - CONTRACT_ACCEPTED
          - CONTRACT_AWAITING
          - WITHDRAW
          - IN_REPAYMENT
          - COMPLETED
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
          enum:
          - PaydayLoan-TNG PDL_TNG
          - PaydayLoan-HMG PDL_HMG
          - PDL_VAC_OFFICE PDL_VAC_OFFICE
          - PDL_VAC_FACTORY PDL_VAC_FACTORY
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListPaydayLoan'
    post:
      tags:
      - mifos-payday-loan-controller
      operationId: createApplicationMifos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseLoanDetailDto'
  /v2/paydays/{loanId}/changeStatus:
    post:
      tags:
      - mifos-payday-loan-controller
      operationId: changeLoanStatusMifos
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoanStatusRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v2/paydays/getServiceToken:
    post:
      tags:
      - mifos-payday-loan-controller
      operationId: getServiceToken
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
  /v2/paydays/cronjob/withdrawLoan:
    post:
      tags:
      - mifos-payday-loan-controller
      operationId: withdrawMifos
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v2/paydays/cronjob/voucherVuiTet:
    post:
      tags:
      - mifos-payday-loan-controller
      operationId: voucherVuiTetMifos
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v2/paydays/cronjob/notifyBeforeGetSalary:
    post:
      tags:
      - mifos-payday-loan-controller
      operationId: notifyBeforeGetSalaryMifos
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v2/paydays/cronjob/latePayment:
    post:
      tags:
      - mifos-payday-loan-controller
      operationId: updateLatePenaltyPaymentMifos
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v1/promotions/vouchers:
    get:
      tags:
      - promotion-controller
      operationId: getVoucherByScopeEvent
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListVoucher'
    post:
      tags:
      - promotion-controller
      operationId: createVoucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoucherRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoucher'
  /v1/promotions/vouchers/voucherTransactions:
    post:
      tags:
      - promotion-controller
      operationId: createVoucherTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckValidVoucherRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoucherTransaction'
  /v1/promotions/vouchers/validate:
    post:
      tags:
      - promotion-controller
      operationId: validateVoucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckValidVoucherRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoucherTransaction'
  /v1/promotions/vouchers/validatePromotionVoucher:
    post:
      tags:
      - promotion-controller
      operationId: validatePromotionVoucher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckValidVoucherRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoucherTransaction'
  /v1/promotions/events:
    get:
      tags:
      - promotion-controller
      operationId: getAllPromotionEvent
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListPromotionEvent'
    post:
      tags:
      - promotion-controller
      operationId: createPromotionEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePromotionEventRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePromotionEvent'
  /v1/paydays:
    post:
      tags:
      - payday-loan-controller
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
  /v1/paydays/{loanId}/changeStatus:
    post:
      tags:
      - payday-loan-controller
      operationId: changeLoanStatus
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoanStatusRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v1/paydays/{loanId}/additionalEmployeeData:
    post:
      tags:
      - payday-loan-controller
      operationId: additionalEmployeeData
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDataRequest'
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseEmployeeData'
  /v1/paydays/updateApplicationTypeOldTNGLoan:
    post:
      tags:
      - payday-loan-controller
      operationId: updateApplicationTypeOldTNGLoan
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v1/paydays/getServiceToken:
    post:
      tags:
      - payday-loan-controller
      operationId: getServiceToken_1
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
  /v1/paydays/cronjob/withdrawLoan:
    post:
      tags:
      - payday-loan-controller
      operationId: withdraw
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v1/paydays/cronjob/voucherVuiTet:
    post:
      tags:
      - payday-loan-controller
      operationId: voucherVuiTet
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v1/paydays/cronjob/notifyBeforeGetSalary:
    post:
      tags:
      - payday-loan-controller
      operationId: notifyBeforeGetSalary
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v1/paydays/cronjob/latePayment:
    post:
      tags:
      - payday-loan-controller
      operationId: updateLatePenaltyPayment
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /v2/paydays/{loanId}/contracts:
    get:
      tags:
      - mifos-payday-loan-controller
      operationId: getLoanContractByLoanIdMifos
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseContract'
  /v2/paydays/{customerId}/activeLoan:
    get:
      tags:
      - mifos-payday-loan-controller
      operationId: getActivePaydayLoanMifos
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
  /v2/paydays/getByStatus:
    get:
      tags:
      - mifos-payday-loan-controller
      operationId: getLoanByStatusMifos
      parameters:
      - name: status
        in: query
        required: true
        schema:
          type: string
          enum:
          - PENDING
          - UNDOAPPROVAL
          - APPROVE
          - AWAITING_DISBURSEMENT
          - REJECT
          - DISBURSE
          - CONTRACT_ACCEPTED
          - CONTRACT_AWAITING
          - WITHDRAW
          - IN_REPAYMENT
          - COMPLETED
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
          enum:
          - PaydayLoan-TNG PDL_TNG
          - PaydayLoan-HMG PDL_HMG
          - PDL_VAC_OFFICE PDL_VAC_OFFICE
          - PDL_VAC_FACTORY PDL_VAC_FACTORY
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListPaydayLoan'
  /v1/tngApplications:
    get:
      tags:
      - application-controller
      operationId: getAllPaydayLoan
      parameters:
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListPaydayLoan'
  /v1/tngApplications/activeLoan:
    get:
      tags:
      - application-controller
      operationId: getActivePaydayLoan
      parameters:
      - name: coreToken
        in: query
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
  /v1/promotions/voucherByTransactionId/{transactionId}:
    get:
      tags:
      - promotion-controller
      operationId: getVoucherByTransactionId
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoucher'
  /v1/paydays/{loanId}/contracts:
    get:
      tags:
      - payday-loan-controller
      operationId: getLoanContractByLoanId
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseContract'
  /v1/paydays/{customerId}/activeLoan:
    get:
      tags:
      - payday-loan-controller
      operationId: getActivePaydayLoan_1
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePaydayLoan'
  /v1/paydays/getByStatus:
    get:
      tags:
      - payday-loan-controller
      operationId: getLoanByStatus
      parameters:
      - name: status
        in: query
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListPaydayLoan'
  /v1/contracts/{loanId}:
    get:
      tags:
      - contract-controller
      operationId: getContractByLoanId
      parameters:
      - name: loanId
        in: path
        required: true
        schema:
          type: string
      - name: customerId
        in: query
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseContract'
components:
  schemas:
    ApiResponseString:
      type: object
      properties:
        result:
          type: string
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    UpdateLoanRequest:
      required:
      - applicationType
      type: object
      properties:
        customerId:
          type: string
        updateInfo:
          type: object
          additionalProperties:
            type: object
        applicationType:
          type: string
    ApiResponsePaydayLoan:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PaydayLoan'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    EmployeeData:
      type: object
      properties:
        name:
          type: string
        mobile:
          type: string
        identityNumber:
          type: string
        startWorkingDay:
          type: string
        contractType:
          type: string
        job:
          type: string
        address:
          type: string
        numberOfWorkDays:
          type: string
        bankName:
          type: string
        bankCode:
          type: string
        accountNumber:
          type: string
        salaryDocument1:
          type: string
        salaryDocument2:
          type: string
        salaryDocument3:
          type: string
    PaydayLoan:
      type: object
      properties:
        id:
          type: string
        coreLoanUuid:
          type: string
        customerId:
          type: string
        expectedAmount:
          type: integer
          format: int32
        expectedTenure:
          type: integer
          format: int32
        actualAmount:
          type: integer
          format: int32
        status:
          type: string
        oldStatus:
          type: string
        appTypeUuid:
          type: string
        appType:
          type: string
        mifosLoanId:
          type: integer
          format: int32
        loanCode:
          type: string
        purpose:
          type: string
        voucherTransactionId:
          type: string
        repaymentStatus:
          type: string
        latePenaltyPayment:
          type: integer
          format: int32
        totalServiceFees:
          type: integer
          format: int32
        getSalaryAt:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        note:
          type: string
        personInChargeId:
          type: string
        applicationType:
          type: string
        termType:
          type: string
        disbursedAt:
          type: string
        approvedAt:
          type: string
        employeeData:
          $ref: '#/components/schemas/EmployeeData'
    UpdateLoanAmountRequest:
      required:
      - applicationType
      - customerId
      - expectedAmount
      type: object
      properties:
        customerId:
          type: string
        expectedAmount:
          type: integer
          format: int32
        applicationType:
          type: string
        termType:
          type: string
        purpose:
          type: string
        voucherTransactionId:
          type: string
    ApiResponseLoanDetailDto:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/LoanDetailDto'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    CoreLoanDetailDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountNo:
          type: integer
          format: int32
        coreStatus:
          $ref: '#/components/schemas/CoreStatusDto'
        currency:
          $ref: '#/components/schemas/Currency'
        principal:
          type: integer
          format: int32
        termFrequency:
          type: integer
          format: int32
        netDisbursalAmount:
          type: integer
          format: int32
        repaymentSchedule:
          $ref: '#/components/schemas/MifosCalculateRepaymentDto'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/CorePaymentTransactionDto'
    CorePaymentTransactionDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        officeId:
          type: integer
          format: int32
        officeName:
          type: string
        type:
          $ref: '#/components/schemas/Type'
        date:
          type: array
          items:
            type: integer
            format: int32
        amount:
          type: integer
          format: int32
        netDisbursalAmount:
          type: integer
          format: int32
        principalPortion:
          type: integer
          format: int32
        interestPortion:
          type: integer
          format: int32
        feeChargesPortion:
          type: integer
          format: int32
        penaltyChargesPortion:
          type: integer
          format: int32
        overpaymentPortion:
          type: integer
          format: int32
        unrecognizedIncomePortion:
          type: integer
          format: int32
        outstandingLoanBalance:
          type: integer
          format: int32
        submittedOnDate:
          type: array
          items:
            type: integer
            format: int32
        manuallyReversed:
          type: integer
          format: int32
        numberOfRepayments:
          type: integer
          format: int32
    CoreStatusDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
        pendingApproval:
          type: boolean
        waitingForDisbursal:
          type: boolean
        active:
          type: boolean
        closedObligationsMet:
          type: boolean
        closedWrittenOff:
          type: boolean
        closedRescheduled:
          type: boolean
        closed:
          type: boolean
        overpaid:
          type: boolean
    Currency:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        decimalPlaces:
          type: string
        inMultiplesOf:
          type: string
        nameCode:
          type: string
        displayLabel:
          type: string
    LoanDetailDto:
      type: object
      properties:
        id:
          type: string
        coreLoanUuid:
          type: string
        customerId:
          type: string
        expectedAmount:
          type: integer
          format: int32
        expectedTenure:
          type: integer
          format: int32
        actualAmount:
          type: integer
          format: int32
        status:
          type: string
        oldStatus:
          type: string
        appTypeUuid:
          type: string
        appType:
          type: string
        mifosLoanId:
          type: integer
          format: int32
        loanCode:
          type: string
        purpose:
          type: string
        voucherTransactionId:
          type: string
        repaymentStatus:
          type: string
        latePenaltyPayment:
          type: integer
          format: int32
        totalServiceFees:
          type: integer
          format: int32
        getSalaryAt:
          type: string
        note:
          type: string
        personInChargeId:
          type: string
        applicationType:
          type: string
        termType:
          type: string
        disbursedAt:
          type: string
        approvedAt:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        coreLoanDetail:
          $ref: '#/components/schemas/CoreLoanDetailDto'
    MifosCalculateRepaymentDto:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        loanTermInDays:
          type: integer
          format: int32
        totalPrincipalDisbursed:
          type: integer
          format: int32
        totalPrincipalExpected:
          type: integer
          format: int32
        totalPrincipalPaid:
          type: integer
          format: int32
        totalInterestCharged:
          type: integer
          format: int32
        totalFeeChargesCharged:
          type: integer
          format: int32
        totalPenaltyChargesCharged:
          type: integer
          format: int32
        totalRepaymentExpected:
          type: integer
          format: int32
        totalOutstanding:
          type: integer
          format: int32
        periods:
          type: array
          items:
            $ref: '#/components/schemas/Period'
    Period:
      type: object
      properties:
        period:
          type: integer
          format: int32
        fromDate:
          type: array
          items:
            type: integer
            format: int32
        dueDate:
          type: array
          items:
            type: integer
            format: int32
        complete:
          type: boolean
        daysInPeriod:
          type: integer
          format: int32
        principalDisbursed:
          type: integer
          format: int32
        principalLoanBalanceOutstanding:
          type: integer
          format: int32
        feeChargesDue:
          type: integer
          format: int32
        feeChargesOutstanding:
          type: integer
          format: int32
        totalOriginalDueForPeriod:
          type: integer
          format: int32
        totalDueForPeriod:
          type: integer
          format: int32
        totalOutstandingForPeriod:
          type: integer
          format: int32
        totalActualCostOfLoanForPeriod:
          type: integer
          format: int32
        principalOriginalDue:
          type: integer
          format: int32
        principalDue:
          type: integer
          format: int32
        principalOutstanding:
          type: integer
          format: int32
        interestOriginalDue:
          type: integer
          format: int32
        interestOutstanding:
          type: integer
          format: int32
        penaltyChargesDue:
          type: integer
          format: int32
        totalPaidForPeriod:
          type: integer
          format: int32
        totalInstallmentAmountForPeriod:
          type: integer
          format: int32
    Type:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        value:
          type: string
        disbursement:
          type: boolean
        repaymentAtDisbursement:
          type: boolean
        repayment:
          type: boolean
        contra:
          type: boolean
        waiveInterest:
          type: boolean
        waiveCharges:
          type: boolean
        accrual:
          type: boolean
        writeOff:
          type: boolean
        recoveryRepayment:
          type: boolean
        initiateTransfer:
          type: boolean
        approveTransfer:
          type: boolean
        withdrawTransfer:
          type: boolean
        rejectTransfer:
          type: boolean
        chargePayment:
          type: boolean
        refund:
          type: boolean
        refundForActiveLoans:
          type: boolean
    UpdateVoucherRequest:
      type: object
      properties:
        adminId:
          type: string
        id:
          type: string
        voucherCode:
          type: string
        description:
          type: string
        expiredAt:
          type: string
        type:
          type: string
        scope:
          type: string
        limitPerDay:
          type: integer
          format: int32
        maxAmount:
          type: integer
          format: int32
        remainAmount:
          type: integer
          format: int32
        limitTransaction:
          type: integer
          format: int32
    ApiResponseVoucher:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Voucher'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    Voucher:
      type: object
      properties:
        id:
          type: string
        promotionEventId:
          type: string
        code:
          type: string
        maxValue:
          type: integer
          format: int32
        percentage:
          type: number
          format: double
        maxAmount:
          type: integer
          format: int32
        remainAmount:
          type: integer
          format: int32
        activedTime:
          type: array
          items:
            type: string
        description:
          type: string
        type:
          type: string
        scope:
          type: string
        expiredAt:
          type: string
        limitPerDay:
          type: integer
          format: int32
        createdAt:
          type: string
        limitTransaction:
          type: integer
          format: int32
    UpdatePromotionEventRequest:
      type: object
      properties:
        adminId:
          type: string
        id:
          type: string
        purpose:
          type: string
        expiredAt:
          type: string
        scope:
          type: string
    ApiResponsePromotionEvent:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PromotionEvent'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    PromotionEvent:
      type: object
      properties:
        id:
          type: string
        purpose:
          type: string
        scope:
          type: string
        createdAt:
          type: string
        expiredAt:
          type: string
    CreateApplicationRequest:
      required:
      - applicationType
      - expectedAmount
      type: object
      properties:
        coreToken:
          type: string
        expectedAmount:
          type: integer
          format: int32
        applicationType:
          type: string
        termType:
          type: string
        purpose:
          type: string
        voucherTransactionId:
          type: string
    UpdateLoanStatusRequest:
      required:
      - applicationType
      type: object
      properties:
        customerId:
          type: string
        status:
          type: string
        applicationType:
          type: string
    CreateVoucherRequest:
      required:
      - limitTransaction
      type: object
      properties:
        adminId:
          type: string
        promotionEventId:
          type: string
        voucherCode:
          type: string
        maxDiscount:
          type: integer
          format: int32
        percentageDiscount:
          type: number
          format: double
        description:
          type: string
        expiredAt:
          type: string
        maxAmount:
          type: integer
          format: int32
        activedTime:
          type: array
          items:
            type: string
        type:
          type: string
        scope:
          type: string
        limitPerDay:
          type: integer
          format: int32
        limitTransaction:
          type: integer
          format: int32
    CheckValidVoucherRequest:
      required:
      - customerId
      - voucherId
      type: object
      properties:
        customerId:
          type: string
        voucherId:
          type: string
    ApiResponseVoucherTransaction:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/VoucherTransaction'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    VoucherTransaction:
      type: object
      properties:
        id:
          type: string
        voucherId:
          type: string
        customerId:
          type: string
        applicationId:
          type: string
        applicationType:
          type: string
        discountValue:
          type: integer
          format: int32
        status:
          type: string
        createdAt:
          type: string
    CreatePromotionEventRequest:
      type: object
      properties:
        adminId:
          type: string
        purpose:
          type: string
        expiredAt:
          type: string
        scope:
          type: string
    EmployeeDataRequest:
      required:
      - accountNumber
      - address
      - bankCode
      - bankName
      - contractType
      - identityNumber
      - job
      - mobile
      - name
      - numberOfWorkDays
      - salaryDocument1
      - salaryDocument2
      - salaryDocument3
      - startWorkingDay
      type: object
      properties:
        name:
          type: string
        mobile:
          pattern: "^0\\d{9}$"
          type: string
        identityNumber:
          type: string
        startWorkingDay:
          type: string
        contractType:
          type: string
        job:
          type: string
        address:
          type: string
        numberOfWorkDays:
          type: string
        bankName:
          type: string
        bankCode:
          type: string
        accountNumber:
          type: string
        salaryDocument1:
          type: string
        salaryDocument2:
          type: string
        salaryDocument3:
          type: string
    ApiResponseEmployeeData:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/EmployeeData'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ApiResponseListPaydayLoan:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/PaydayLoan'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ApiResponseContract:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Contract'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    Contract:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        type:
          type: string
        loanId:
          type: string
        idRequest:
          type: integer
          format: int32
        idDocument:
          type: integer
          format: int32
        path:
          type: string
        createdAt:
          type: string
    ApiResponseListVoucher:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Voucher'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ApiResponseListPromotionEvent:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/PromotionEvent'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
